apiVersion: 1
datasources:
- prometheus:
  access: proxy
  basicAuth: false
  editable: true
  name: Prometheus
  orgId: 1
  type: prometheus
  url: http://prometheus:9090
- name: Loki
  type: loki
  uid: DzuPFa9P2
  access: proxy
  orgId: 1
  url: http://loki:3100
  basicAuth: false
  isDefault: true
  version: 1
  editable: true
  derivedFields:
  - datasourceUid: EbPG8fYoz
    matcherRegex: "traceid\u0022: \u0022([A-Za-z0-9]{32})"
    name: trace_id
    url: '$${__value.raw}'
    urlDisplayLabel: 'View Traces'
- name: Jaeger
  type: jaeger
  uid: EbPG8fYoz
  url: http://jaeger:16686
  access: proxy
  basicAuth: false
  # basicAuthUser: my_user
  readOnly: false
  isDefault: false
  editable: true
  jsonData:
    tracesToLogsV2:
      # Field with an internal link pointing to a logs data source in Grafana.
      # datasourceUid value must match the uid value of the logs data source.
      datasourceUid: 'DzuPFa9P2'
      spanStartTimeShift: '-5m'
      spanEndTimeShift: '5m'
      filterByTraceID: false
      filterBySpanID: false
      customQuery: trace
      query: '{exporter="OTLP"} | json | traceid=`$${__trace.traceId}`'
      tags:
      - traceid
      - spanid
      - key: traceID
        value: attributes_trace_id
    # tracesToMetrics:
    #   datasourceUid: 'prom'
    #   spanStartTimeShift: '1h'
    #   spanEndTimeShift: '-1h'
    #   tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
    #   queries:
    #     - name: 'Sample query'
    #       query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
    nodeGraph:
      enabled: true
    traceQuery:
      timeShiftEnabled: true
      spanStartTimeShift: '1h'
      spanEndTimeShift: '-1h'
    spanBar:
      type: 'None'
  # secureJsonData:
  #   basicAuthPassword: my_password