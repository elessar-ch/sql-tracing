receivers:
  otlp:
    protocols:
      grpc:
      http:
  postgresql:
    endpoint: db:5432
    transport: tcp
    username: oteluser
    password: otelpw
    databases:
      - knexdb
    collection_interval: 10s
    tls:
      insecure: true
  sqlquery/pgstatstatements:
    driver: postgres
    datasource: "host=db port=5432 user=oteluser password=otelpw sslmode=disable database=knexdb"
    queries:
    - sql: "select * from pg_stat_statements WHERE CAST(dbid AS text) = '16391' AND CAST(userid AS text) = '16392' AND toplevel = true"
      metrics:
      - metric_name: pg_stat_statements_total_exec_time
        value_column: total_exec_time
        attribute_columns:
          - queryid
          - userid
          - dbid
        value_type: double
        monotonic: true
        data_type: sum
      - metric_name: pg_stat_statements_stddev_exec_time
        value_column: stddev_exec_time
        attribute_columns:
          - queryid
          - userid
          - dbid
        value_type: double
        data_type: gauge
      - metric_name: pg_stat_statements_min_exec_time
        value_column: min_exec_time
        attribute_columns:
          - queryid
          - userid
          - dbid
        value_type: double
        data_type: gauge
      - metric_name: pg_stat_statements_max_exec_time
        value_column: max_exec_time
        attribute_columns:
          - queryid
          - userid
          - dbid
        value_type: double
        data_type: gauge
      - metric_name: pg_stat_statements_mean_exec_time
        value_column: mean_exec_time
        attribute_columns:
          - queryid
          - userid
          - dbid
        value_type: double
        data_type: gauge
      - metric_name: pg_stat_statements_calls
        value_column: calls
        attribute_columns:
          - queryid
          - userid
          - dbid
        value_type: int
        data_type: sum
        monotonic: true
      - metric_name: pg_stat_statements_rows
        value_column: rows
        attribute_columns:
          - queryid
          - userid
          - dbid
        value_type: int
        data_type: sum
processors:
  logstransform/fluentbitlog:
    operators:
    - type: json_parser
      if: 'body.log matches "^{.*}$"'
      parse_from: body.log
      timestamp:
        parse_from: attributes.timestamp
        layout_type: strptime
        layout: '%Y-%m-%d %H:%M:%S.%L %Z'
    - type: regex_parser
      regex: "traceparent='00-(?P<trace_id>\\S*)-(?P<span_id>\\S*)-(?P<trace_flags>\\d*)'"
      parse_from: body.log
      trace:
        trace_id:
          parse_from: attributes.trace_id
        span_id:
          parse_from: attributes.span_id
        trace_flags:
          parse_from: attributes.trace_flags
  filter/knexuser:
    logs:
      include:
        match_type: strict
        record_attributes:
          - key: user
            value: knexuser
  attributes/loki:
    actions:
      - action: insert
        key: loki.attribute.labels
        value: dbname, user
  # resource/loki:
  #   attributes:
  #     - action: insert
  #       key: loki.resource.labels
  #       value: service.name, service.namespace
exporters:
  debug:
    verbosity: detailed
  otlp/jaeger:
    endpoint: jaeger:4317
    tls:
      insecure: true
  otlp/pgtrace:
    endpoint: pgtrace-collector:4317
    tls:
      insecure: true
  prometheus:
    endpoint: "0.0.0.0:8889"
    send_timestamps: true
    metric_expiration: 180m
    enable_open_metrics: true
    add_metric_suffixes: false
    resource_to_telemetry_conversion:
      enabled: true
  loki:
    endpoint: http://loki:3100/loki/api/v1/push
    tls:
      insecure: true
connectors:
  forward:
service:
  pipelines:
    traces:
      receivers: [otlp]
      exporters: [otlp/jaeger]
    metrics:
      receivers: [otlp, postgresql, sqlquery/pgstatstatements]
      exporters: [prometheus]
    logs/postgres:
      receivers: [otlp]
      processors: [logstransform/fluentbitlog, filter/knexuser]
      exporters: [otlp/pgtrace, forward]
    logs/loki:
      receivers: [forward]
      processors: [attributes/loki]
      exporters: [loki, debug]
