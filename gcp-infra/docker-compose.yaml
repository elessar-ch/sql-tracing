# Use postgres/example user/password credentials
version: '3.1'

services:
  node-example-app:
    build: ../node-example-app/
    restart: always
    environment:
      DATABASE_NAME: knexdb
      POSTGRES_USER: knexuser
      POSTGRES_USER_PW: knexpw
      POSTGRES_PORT: 5432
      POSTGRES_HOST: <your-postgres-host>
      NODE_ENV: development
      OTEL_COLLECTOR_TRACES_URL: 'http://otel-collector:4318/v1/traces'
      OTEL_COLLECTOR_METRICS_URL: 'http://otel-collector:4318/v1/metrics'
    ports:
      - 3000:3000
    networks:
      - otel
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - adminer-network
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: "/etc/otel/key.json"
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
      - ./credentials/sql-trace-otel.json:/etc/otel/key.json
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    networks:
      - prometheus
      - otel
      - jaeger
networks:
  adminer-network:
  otel:
  jaeger:
  prometheus:
volumes:
  prometheus-volume:
    external: false